-- Copyright 2012-2013 Google Inc. All Rights Reserved.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

Tests for variables

Output is stripped of quotes, as different shells quote differently.

Set up for bash, harmless for others. Forces output of thse commands to be
in POSIX format.
    # POSIXLY_CORRECT=1

set shell variable
    # aaa=x
    # set | tr -d \'\" | fgrep aaa
    aaa=x

set empty shell variable
    # bbb=''
    # set | tr -d \'\" | fgrep bbb
    bbb=

    # bbbalt=
    # set | tr -d \'\" | fgrep bbbalt
    bbbalt=

export environment var
    # export ccc=x
    # export -p | tr -d \'\" | fgrep ccc
    export ccc=x

export empty string environment var
    # export ddd=''
    # export -p | tr -d \'\" | fgrep ddd
    export ddd=

export unassigned environment var
    # export eee
    # export -p | tr -d \'\" | fgrep eee
    export eee

echoing unassigned var acts like empty string
    # echo ">>$eee<<"
    >><<

setting exported variable remains exported
    # ccc=y
    # export -p | tr -d \'\" | fgrep ccc
    export ccc=y

set readonly shell variable
    # fff=x
    # readonly fff
    # readonly -p | tr -d \'\" | fgrep fff
    readonly fff=x
    # set | tr -d \'\" | fgrep fff
    fff=x

set readonly environment variable
    # export ggg=x
    # readonly ggg
    # readonly -p | tr -d \'\" | fgrep ggg
    readonly ggg=x
    # export -p | tr -d \'\" | fgrep ggg
    export ggg=x

set readonly unassigned environment var
    # export hhh
    # readonly hhh
    # readonly -p | tr -d \'\" | fgrep hhh
    readonly hhh
    # export -p | tr -d \'\" | fgrep hhh
    export hhh

set readonly shell variable one-shot
    # readonly iii=x
    # readonly -p | tr -d \'\" | fgrep iii
    readonly iii=x
    # set | tr -d \'\" | fgrep iii
    iii=x

export readonly variable
    # readonly jjj=x
    # export jjj
    # readonly -p | tr -d \'\" | fgrep jjj
    readonly jjj=x
    # export -p | tr -d \'\" | fgrep jjj
    export jjj=x

export readonly unassigned environment var
    # readonly kkk
    # export kkk
    # readonly -p | tr -d \'\" | fgrep kkk
    readonly kkk
    # export -p | tr -d \'\" | fgrep kkk
    export kkk

can't set readonly shell variable
Note: skipped on other shells as the error message is inconsistent
TODO(mzero): can't test this now that plush ALSO exits on shell error!
    # readonly lll=x
    # lll=y && echo succeed || echo fail        # SKIP
    var is read-only: lll

per-command exported variable bindings are restored after command exits
    # export mmm=1
    # mmm=2 env | fgrep mmm
    mmm=2
    # env | fgrep mmm
    mmm=1

per-command variable bindings for special built-in commands are not restored
Note: actually does the wrong thing here, and restores the binding.
    # nnn=1
    # nnn=2 set mmm=1
    # set | tr -d \'\" | fgrep nnn
    nnn=2

failing variable commands stop after failure
Note: Skipped in dash because the error message is inconsistent.
Note: Skipped in sh and bash because they fail this test.
TODO(mzero): can't test this now that plush ALSO exits on shell error!
    # export nnn=1
    # export ooo=2
    # export ppp=3
    # readonly ooo
    # unset nnn ooo ppp                         # SKIP
    var is read-only: ooo
    # env | fgrep nnn                           # SKIP
    # env | fgrep ooo                           # SKIP
    ooo=2
    # env | fgrep ppp                           # SKIP
    ppp=3

pipe in last test gives an error
    # dummy=test
